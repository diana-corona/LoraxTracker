service: lorax-tracker

provider:
  name: aws
  runtime: python3.11
  region: us-west-2
  environment:
    POWERTOOLS_SERVICE_NAME: ${self:service}
    TELEGRAM_BOT_TOKEN: ${ssm:/lorax/telegram-token}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: !GetAtt TrackerTable.Arn
        - Effect: Allow
          Action:
            - ssm:GetParameter
          Resource: arn:aws:ssm:${aws:region}:${aws:accountId}:parameter/lorax/*

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    layer:
      name: lorax-dependencies
      description: Python dependencies for Lorax Tracker
    noDeploy:
      - pytest
      - mypy
      - black
      - isort
      - pylint
    dockerizePip: true

package:
  patterns:
    - '!.env'
    - '!.venv/**'
    - '!tests/**'
    - '!__pycache__/**'
    - '!.pytest_cache/**'
    - '!.mypy_cache/**'

functions:
  telegram:
    handler: src.handlers.telegram.handler
    events:
      - http:
          path: /webhook
          method: post
    timeout: 29
    memorySize: 256
  
  prediccion:
    handler: src.handlers.prediccion.handler
    events:
      - http:
          path: /predict
          method: post
    timeout: 10
    memorySize: 128

  fase:
    handler: src.handlers.fase.handler
    events:
      - http:
          path: /phase
          method: post
    timeout: 10
    memorySize: 128
  
  registrar:
    handler: src.handlers.registrar.handler
    events:
      - http:
          path: /register
          method: post
    timeout: 10
    memorySize: 128

  lista_semanal:
    handler: src.handlers.lista_semanal.handler
    events:
      - schedule: 
          rate: cron(0 8 ? * SAT *)
          enabled: true
    timeout: 300
    memorySize: 256

resources:
  Resources:
    TrackerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        Tags:
          - Key: Service
            Value: ${self:service}
          - Key: Environment
            Value: ${sls:stage}
